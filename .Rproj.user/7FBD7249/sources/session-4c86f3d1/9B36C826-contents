---
title: "Time-dependent Cox modeling"
output: html_notebook
author: Irina Garanina
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library(tidyverse)
library(survival)
library(broom)
library(dplyr)
library(purrr)
library(flextable)
library(survminer)
library(forestplot)
library(car)
library(eulerr)

library(conflicted)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("summarize", "dplyr")
conflict_prefer("lag", "dplyr")
conflict_prefer("year", "lubridate")
conflict_prefer("recode", "dplyr")
```

```{r}
datamain <- readRDS("data/processed_data_19dec24.rds")
time_ind <- readRDS("data/time_independent_factors241219_full.rds") %>% ungroup()
```

# Description of patient treatment

```{r}
data_summary <- datamain %>% filter (!is.na(OS1_startdt)) %>%
  group_by(USUBJID) %>%
  summarize(
    TPE = safe_min(DateTPE),
    BPAcount = sum(!is.na(BPAdate)),
    TPEcount = sum(!is.na(DateTPE)),
    LAGcount = sum(!is.na(min_LAGdt)),
    BPAsubfl = any(!is.na(BPAdate)),
    TPEsubfl = any(!is.na(DateTPE)),
    LAGsubfl = any(!is.na(min_LAGdt)),
    treated = any(BPAsubfl | TPEsubfl | LAGsubfl)
  )
```

```{r}
sets <- list(
  "Transluminal balloon angioplasty" = which(data_summary$BPAsubfl),
  "Pulmonary thromboendarterectomy" = which(data_summary$TPEsubfl),
  "PAH therapy" = which(data_summary$LAGsubfl)
)

# Vienn plot
venn_counts <- c(
  "Transluminal balloon angioplasty" = sum(data_summary$BPAsubfl),
  "Pulmonary thromboendarterectomy" = sum(data_summary$TPEsubfl),
  "PAH therapy" = sum(data_summary$LAGsubfl),
  "Transluminal balloon angioplasty&Pulmonary thromboendarterectomy" = sum(data_summary$BPAsubfl & data_summary$TPEsubfl),
  "Transluminal balloon angioplasty&PAH therapy" = sum(data_summary$BPAsubfl & data_summary$LAGsubfl),
  "Pulmonary thromboendarterectomy&PAH therapy" = sum(data_summary$TPEsubfl & data_summary$LAGsubfl),
  "Transluminal balloon angioplasty&Pulmonary thromboendarterectomy&PAH therapy" = sum(data_summary$BPAsubfl & data_summary$TPEsubfl & data_summary$LAGsubfl)
)


plot(euler(venn_counts),
     fills = c("#A9D6E5","#F4A4A6","#A8D5BA"),   
     labels = list(fontsize = 14),  
     quantities = list(fontsize = 12, col = "black"),  
     edges = list(col = "black") 
)
```

```{r, fig.width= 3, fig.height = 4}
treatment_counts <- data_summary %>%
  summarize(
    Treated = sum(treated),
    "Not Treated" = sum(!treated)
  ) %>%
  pivot_longer(cols = everything(), names_to = "Group", values_to = "Count")

ggplot(treatment_counts, aes(x = Group, y = Count, fill = Group)) +
  geom_bar(stat = "identity", width = 0.2) +
  geom_text(aes(label = Count), vjust = -0.5) +
  scale_fill_manual(values = c("Treated" = "#69b3a2", "Not Treated" = "#f4a582")) +
  theme_minimal() +
  labs( x = "", y = "Number of Patients") +
  theme(legend.position = "none")
```

```{r}
test <- datamain %>% 
  select(USUBJID, VisitDate, DateTPE, BPAdate, OS1_startdt, TTCDdt, TTCD, TTCD_event, CPTE)
```

### Data preparation for analysis

```{r}
timedep0 <- datamain %>% 
  select (USUBJID,VisitDate, DateTPE, BPAdate, OS1_startdt, TTCDdt, btdt, TTCD_event, deathdt, is_worsening, lastalivedt, "Sildenafil", "Riociguat", "Iloprost", "Selexipag", 
           "Bozentan", "Ambrisentan", "Macitentan", PAHC, priorSildenafil, priorRiociguat, priorIloprost, priorSelexipag, priorBozentan, priorAmbrisentan, priorMacitentan)  
```

Calculation of time intervals starting from the first interval at OS1_startdt (treatment initiation date) and ending at either the last contact date (lastalivedt) if no event occurred or if it happened at the patient's last visit, or at the date of the next visit following the visit with the event.

```{r}
timedep_manual0 <- timedep0 %>%
  arrange(USUBJID, VisitDate) %>%  
  group_by(USUBJID) %>%
  mutate(
   
    tstart = VisitDate,
    
    tstop = lead(VisitDate, default = first(lastalivedt))  
  ) %>%
  filter(tstart != tstop) %>%
   mutate(
    tstart = if_else(OS1_startdt > tstart & OS1_startdt < tstop, OS1_startdt, tstart),
    Age_at_start = floor(as.numeric(difftime(tstart, btdt, units = "days")) / 30.4375 / 12),
  ) %>%
  filter(tstop > OS1_startdt & tstart < tstop)%>%
  ungroup() %>%
 left_join(
    timedep0 %>%
      select(USUBJID, BPAdate) %>%
      filter(!is.na(BPAdate)) %>%
      group_by(USUBJID) %>%
      summarise(all_BPAdate = list(BPAdate), .groups = "drop"),
    by = "USUBJID"
  ) %>%
  ungroup() %>%
  left_join(
    timedep0 %>%
      select(USUBJID, DateTPE) %>%
      filter(!is.na(DateTPE)) %>%
      group_by(USUBJID) %>%
      summarise(all_DateTPE = list(DateTPE), .groups = "drop"),
    by = "USUBJID"
  ) %>%
  rowwise() %>%
  mutate(
    TPEfl = as.numeric(any(unlist(all_DateTPE) >= tstart & unlist(all_DateTPE) < tstop, na.rm = TRUE)),
    BPAfl = as.numeric(any(unlist(all_BPAdate) >= tstart & unlist(all_BPAdate) < tstop, na.rm = TRUE)),
    # cumulative surgeries
    CumBPA = sum(unlist(all_BPAdate) < tstop, na.rm = TRUE),
    CumTPE = sum(unlist(all_DateTPE) < tstop, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  select(USUBJID, tstart, tstop, TPEfl, BPAfl, CumBPA, CumTPE, everything(), -all_BPAdate, -all_DateTPE, -btdt) %>%
  left_join(
    time_ind %>%
      select(USUBJID, MutationCat0, SexCat0) %>%
      rename(Mut = MutationCat0, Sex = SexCat0),
    by = "USUBJID"
  ) %>%
  mutate(
    TPEfl = factor(TPEfl, levels = c(0, 1)),
    BPAfl = factor(BPAfl, levels = c(0, 1))
  )
```

PAH therapy addition

```{r}
add_drug_variable2 <- function(data_intervals, drug_name) {
  
   new_var <- paste0(drug_name, "fl")
   prior_var <- paste0("prior", drug_name)
 
   result <- data_intervals %>%
      group_by(USUBJID) %>%
       mutate(
         n =  row_number(),
         !!sym(new_var) := NA
       ) %>%
       mutate(
          !!sym(new_var):= case_when(
          PAHC == 'Да' ~ 0,                               
          !!sym(drug_name) == 'Да' ~ 1,
          n == 1 & !!sym(prior_var) == 1 ~ 1,
          n > 1 ~ dplyr::lag(!!sym(new_var), default = NA_real_),
          TRUE ~ !!sym(new_var)
          )
      ) %>%
      fill(!!sym(new_var), .direction = "down") %>%
      mutate(!!sym(new_var) := replace_na(!!sym(new_var), 0)) %>%
      ungroup()
   
    return(result)
}
```

```{r}
drugs <- c("Sildenafil", "Riociguat", "Iloprost", "Selexipag", "Bozentan", "Ambrisentan", "Macitentan")

for (drug in drugs) {
  timedep_manual0 <- add_drug_variable2(timedep_manual0, drug)
}

test5 <- timedep_manual0 %>%
  select(USUBJID, VisitDate, Sildenafil, priorSildenafil, PAHC, Sildenafilfl, n)
```

```{r}
timedep_manual1 <- timedep_manual0 %>%
  rowwise() %>%
  mutate(LAGfl = as.integer(any(c_across(ends_with("fl") & !matches("TPEfl|BPAfl")) == 1))) %>%
  ungroup() %>%
   mutate(
    LAGfl = factor(LAGfl, levels = c(0, 1)),
    across(c("Sildenafilfl", "Riociguatfl", "Iloprostfl", "Selexipagfl", "Bozentanfl", "Ambrisentanfl", "Macitentanfl"),
         ~ factor(.x, levels = c(0, 1)))
  ) %>% 
  select (-c("Sildenafil", "Riociguat", "Iloprost", "Selexipag", "Bozentan", "Ambrisentan", "Macitentan", n))
```

Input dataset of TTCD

```{r}
time_dep_base_TTCD <- timedep_manual1 %>%
   filter(TTCDdt > OS1_startdt) %>%
    arrange(USUBJID, VisitDate) %>% 
  group_by(USUBJID) %>%
  mutate(
    is_after_TTCDdt = lag(VisitDate == TTCDdt, default = FALSE),
    
    has_next_after_TTCDdt = any(is_after_TTCDdt)
  ) %>%
 filter(
    
    (TTCD_event == 0) |
   
    (TTCD_event == 1 & (
      (has_next_after_TTCDdt & row_number() <= which.max(is_after_TTCDdt)) |
      (!has_next_after_TTCDdt & row_number() <= which.max(VisitDate == TTCDdt))
    ))
  )  %>%
  filter(is_after_TTCDdt == FALSE) %>%
   mutate(
   
    tstart = as.numeric(as.Date(tstart) - as.Date(OS1_startdt)),
    tstop = as.numeric(as.Date(tstop) - as.Date(OS1_startdt)),
    event = factor(is_worsening, levels=c(0,1)) 
  ) %>%
  select(USUBJID, tstart, tstop, event, everything(), -VisitDate, -DateTPE, -BPAdate, -OS1_startdt, -TTCDdt, -TTCD_event, -deathdt, -PAHC, -starts_with('prior'), -lastalivedt, -is_after_TTCDdt, -has_next_after_TTCDdt, -is_worsening) %>%
  ungroup()
```

Input dataset for OS

```{r}
time_dep_base_OS <- timedep_manual1 %>%
   filter(lastalivedt > OS1_startdt) %>%
    arrange(USUBJID, VisitDate) %>%  # Сортируем по пациенту и дате визита
  group_by(USUBJID) %>%
   mutate(
    # Добавляем переменную event
    event = case_when(
      !is.na(deathdt) & VisitDate == max(VisitDate, na.rm = TRUE) ~ 1, # Последний визит, если deathdt не NA
      !is.na(deathdt) ~ 0,                                           # Все остальные визиты, если deathdt не NA
      is.na(deathdt) ~ 0                                            # Все визиты, если deathdt NA
    ),
    # Пересчитываем tstart и tstop в количество дней относительно OS1_startdt
    tstart = as.numeric(as.Date(tstart) - as.Date(OS1_startdt)),
    tstop = as.numeric(as.Date(tstop) - as.Date(OS1_startdt))
  ) %>%
  select(USUBJID, tstart, tstop, event, everything(), -VisitDate, -DateTPE, -BPAdate, -OS1_startdt, -TTCDdt, -TTCD_event, -deathdt, -PAHC, -starts_with('prior'), -lastalivedt, -is_worsening) %>%
  ungroup()
```

# Time-dependent Cox model

```{r}
analyze_time_dependent_cox <- function(data, start, stop, event, main_covariates, additional_covariates) {
  results <- list()
  
  for (main_cov in main_covariates) {
    all_covariates <- c(main_cov, additional_covariates)
    
    complete_data <- data %>%
      filter(if_all(all_of(all_covariates), ~ !is.na(.)))
    
    total_complete <- complete_data %>%
      summarise(
        Total_N = n_distinct(USUBJID), 
        Total_Events = sum(as.integer(!!sym(event)), na.rm = TRUE) 
      )
    
    if (length(additional_covariates) > 0) {
      formula <- as.formula(paste0(
        "Surv(", start, ", ", stop, ", ", event, ") ~ ", 
        main_cov, 
        " + ", 
        paste(additional_covariates, collapse = " + ")
      ))
    } else {
      formula <- as.formula(paste0(
        "Surv(", start, ", ", stop, ", ", event, ") ~ ", 
        main_cov
      ))
    }
    
    print(formula)
    
    model <- tryCatch({
      coxph(formula, data = complete_data, id = USUBJID)
    }, error = function(e) NULL)
    print(model)
   
    if (!is.null(model)) {
      broom_results <- tidy(model) %>%
        filter(
      term == main_cov | startsWith(term, paste0(main_cov, "1")) 
    ) %>%
        mutate(
          HR = exp(estimate),
          lower_95 = exp(estimate - 1.96 * std.error),
          upper_95 = exp(estimate + 1.96 * std.error),
          HR_with_CI = paste0(
            round(HR, 2), 
            " (", 
            round(lower_95, 2), 
            "-", 
            round(upper_95, 2), 
            ")"
          )
        ) %>%
        bind_cols(total_complete) %>% 
        select(main_covariate = term, HR_with_CI, p.value, Total_N, Total_Events)
    } else {
     
      broom_results <- tibble(
        main_covariate = main_cov,
        HR_with_CI = "N.A.",
        p.value = "N.A.",
        Total_N = total_complete$Total_N,
        Total_Events = total_complete$Total_Events
      )
    }
    
    results[[main_cov]] <- broom_results
  }
  
  final_results <- bind_rows(results)
  
final_results <- final_results %>%
  mutate(
    numeric_p_value = ifelse(p.value == "N.A.", NA, as.numeric(p.value))
  )
if (sum(!is.na(final_results$numeric_p_value)) > 1) {
  final_results <- final_results %>%
    mutate(
      raw_adj_p_value = p.adjust(numeric_p_value, method = "BH") 
    )
} else {
  final_results <- final_results %>%
    mutate(raw_adj_p_value = numeric_p_value) 
}


final_results <- final_results %>%
  mutate(
    p.value = ifelse(
      is.na(numeric_p_value), "N.A.",
      ifelse(numeric_p_value < 0.001, "<0.001", format(round(numeric_p_value, 3), nsmall = 3))
    ),
    adj_p_value = ifelse(
      is.na(raw_adj_p_value), "N.A.",
      ifelse(raw_adj_p_value < 0.001, "<0.001", format(round(raw_adj_p_value, 3), nsmall = 3))
    )
  )


final_results <- final_results %>%
  select(-numeric_p_value, -raw_adj_p_value)


  return(final_results)
}
```

# Multivariate regression including all treatment options together with adjustment covariates

## Time to CD

```{r}
cox_model <- coxph(Surv(tstart, tstop, event) ~  BPAfl + TPEfl + LAGfl + Age_at_start + Mut + Sex, 
                   data = time_dep_base_TTCD, 
                   id = USUBJID)

labels <- c(
  "BPAfl1" = "Transluminal Balloon Angioplasty",
  "TPEfl1" = "Pulmonary Thromboendarterectomy",
  "LAGfl1" = "PAH Medication Therapy",
  "Age_at_start" = "Age at Baseline",
  "MutДа" = "Mutation Presence",
  "SexЖенский" = "Sex"
)

tidy_results <- tidy(cox_model, conf.int = TRUE) %>%
  mutate(term = factor(term, levels = rev(term), labels = rev(labels[term])))

ggplot(tidy_results, aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high)) +
  geom_pointrange(color = "blue") +
  geom_vline(xintercept = 1, linetype = "dashed", color = "red") +
  theme_minimal() +
  labs(x = "Hazard Ratio", y = "Variables", title = "Forest Plot for Deterioration-Free Survival, Multifactor Cox Model") +
  theme(axis.text.y = element_text(size = 10))

car::vif(cox_model)
```

## OS

```{r}
cox_model_os <- coxph(Surv(tstart, tstop, event) ~ TPEfl + BPAfl + LAGfl + Age_at_start + Mut + Sex, 
                   data = time_dep_base_OS, 
                   id = USUBJID)

labels <- c(
  "BPAfl1" = "Transluminal Balloon Angioplasty",
  "TPEfl1" = "Pulmonary Thromboendarterectomy",
  "LAGfl1" = "PAH Medication Therapy",
  "Age_at_start" = "Age at Baseline",
  "MutДа" = "Mutation Presence",
  "SexЖенский" = "Sex"
)

tidy_results <- tidy(cox_model_os, conf.int = TRUE) %>%
  mutate(term = factor(term, levels = rev(term), labels = rev(labels[term]))) 

ggplot(tidy_results, aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high)) +
  geom_pointrange(color = "blue") +
  geom_vline(xintercept = 1, linetype = "dashed", color = "red") +
  theme_minimal() +
  labs(x = "Hazard Ratio", y = "Variables", title = "Forest Plot for Deterioration Free Survival, Multifactor Cox Model") +
  theme(axis.text.y = element_text(size = 10))

car::vif(cox_model_os)
```

# TTCD with adjustment

```{r}

TTCDCox_confaunders <- analyze_time_dependent_cox(
  data = time_dep_base_TTCD,
  start = "tstart", 
  stop = "tstop",
  event = "event",
  main_covariates = c("TPEfl", "BPAfl", "LAGfl"), 
  additional_covariates = c("Age_at_start", "Mut", "Sex") 
)

 
  covariate_names <- c(
    "TPEfl1" = "Pulmonary thromboendarterectomy",
    "BPAfl1" = "Transluminal balloon angioplasty",
    "LAGfl1" = "PAH medication therapy"
  )
  
  TTCDCox_confaunders <- TTCDCox_confaunders %>%
    mutate(
      Covariate = covariate_names[main_covariate]
    ) %>%
    select(Covariate, Total_N, Total_Events, HR_with_CI, p.value, adj_p_value)
  
  flextable::flextable(TTCDCox_confaunders) %>%
    flextable::set_header_labels(
      Covariate = "Covariate",
      Total_N = "N subjects",
      Total_Events = "N events",
      HR_with_CI = "HR (95% CI)",
      p.value = "p-value",
      adj_p_value = "Adjusted p-value (1)"
    ) %>%
     flextable::add_header_lines("Effect of Treatment on Deteriration-free Survival") %>%
     flextable::align(align = "center", part = "header") %>% 
    flextable::add_footer_lines("Cox time-dependent model with adjustment on Sex, Mutation status and Age.") %>%
    flextable::add_footer_lines("(1) Benjamini–Hochberg adjustment is applied.") %>%
    flextable::autofit()
```

# TTCD without adjustment

```{r}
TTCDCox <- analyze_time_dependent_cox(
  data = time_dep_base_TTCD,
  start = "tstart", 
  stop = "tstop",
  event = "event",
  main_covariates = c("TPEfl", "BPAfl", "LAGfl"),
  additional_covariates = c()
)


  TTCDCox <- TTCDCox %>%
    mutate(
      Covariate = covariate_names[main_covariate]
    ) %>%
    select(Covariate,Total_N, Total_Events, HR_with_CI, p.value, adj_p_value) 
  
  # Создаем flextable
  flextable::flextable(TTCDCox) %>%
    flextable::set_header_labels(
      Covariate = "Covariate",
      Total_N = "N subjects",
      Total_Events = "N events",
      HR_with_CI = "HR (95% CI)",
      p.value = "p-value",
      adj_p_value = "Adjusted p-value (1)"
    ) %>%
    flextable::add_header_lines("Effect of Treatment on Deteriration-free Survival") %>%
    flextable::align(align = "center", part = "header") %>% 
    flextable::add_footer_lines("Cox time-dependent model without any adjustment.") %>%
    flextable::add_footer_lines("(1) Benjamini–Hochberg adjustment is applied.") %>%
    flextable::autofit()
```

# OS with adjustment

```{r}
OSCox_confaunders <- analyze_time_dependent_cox(
  data = time_dep_base_OS,
  start = "tstart",
  stop = "tstop",
  event = "event",
  main_covariates = c("TPEfl", "BPAfl", "LAGfl"),
  additional_covariates = c("Age_at_start", "Mut", "Sex") 
)

  OSCox_confaunders <- OSCox_confaunders %>%
    mutate(
      Covariate = covariate_names[main_covariate]
    ) %>%
    select(Covariate, Total_N, Total_Events, HR_with_CI, p.value, adj_p_value)
  
  flextable::flextable(OSCox_confaunders) %>%
    flextable::set_header_labels(
      Covariate = "Covariate",
      Total_N = "N subjects",
      Total_Events = "N events",
      HR_with_CI = "HR (95% CI)",
      p.value = "p-value",
      adj_p_value = "Adjusted p-value"
    ) %>%
    flextable::add_header_lines("Effect of Treatment on Overall Survival") %>%
    flextable::align(align = "center", part = "header") %>% 
    flextable::add_footer_lines("Cox time-dependent model with adjustment on Sex, Mutation status and Age.") %>%
    flextable::add_footer_lines("(1) Benjamini–Hochberg adjustment is applied.") %>%
    flextable::autofit()
```

# OS without adjustment

```{r}
OSCox <- analyze_time_dependent_cox(
  data = time_dep_base_OS,
  start = "tstart",
  stop = "tstop",
  event = "event",
  main_covariates = c("TPEfl", "BPAfl", "LAGfl"),
  additional_covariates = c()
)
  
  OSCox <- OSCox %>%
    mutate(
      Covariate = covariate_names[main_covariate]
    ) %>%
    select(Covariate, Total_N, Total_Events, HR_with_CI, p.value, adj_p_value)
  
  # Создаем flextable
  flextable::flextable(OSCox) %>%
    flextable::set_header_labels(
      Covariate = "Covariate",
      Total_N = "N subjects",
      Total_Events = "N events",
      HR_with_CI = "HR (95% CI)",
      p.value = "p-value",
      adj_p_value = "Adjusted p-value"
    ) %>%
    flextable::add_header_lines("Effect of Treatment on Overall Survival") %>%
    flextable::align(align = "center", part = "header") %>% 
    flextable::add_footer_lines("Cox time-dependent model without adjustment.") %>%
    flextable::add_footer_lines("(1) Benjamini–Hochberg adjustment is applied.") %>%
    flextable::autofit()
```

# TTCD all results

```{r, fig.width = 10, fig.height = 4}
TTCDCox_confaunders <- TTCDCox_confaunders %>%
  mutate(Model = "With Covariates") 

TTCDCox <- TTCDCox %>%
  mutate(Model = "Without Covariates")

combined_table <- bind_rows(TTCDCox_confaunders, TTCDCox)

forest_data_plot <- combined_table %>%
  mutate(
    HR = as.numeric(sub(" .*", "", HR_with_CI)), 
    lower_95 = as.numeric(sub(".*\\((.*)-.*\\)", "\\1", HR_with_CI)), 
    upper_95 = as.numeric(sub(".*-(.*)\\)", "\\1", HR_with_CI)),     
    p_and_adj_p = paste0("p: ", p.value, "; adj: ", adj_p_value)     
  ) %>%
  arrange(Covariate, Model)

labeltext <- rbind(
  c("Covariate", "HR (95% CI)", "Model", "P-values"), 
  forest_data_plot %>% select(Covariate, HR_with_CI, Model, p_and_adj_p) %>% as.matrix()
)

mean_values <- forest_data_plot$HR
lower_values <- forest_data_plot$lower_95
upper_values <- forest_data_plot$upper_95

#png("outputs/forest_plot_time_dep_TTCD.png", width = 1500, height = 500, res = 150)

forestplot(
  labeltext = labeltext,
  mean = c(NA, mean_values),
  lower = c(NA, lower_values),
  upper = c(NA, upper_values),
  xlog = TRUE,
  xlim = c(0.01, 100),                   # Настройка диапазона оси X
  title = "Forest Plot for Time-Dependent Cox Models for Deterioration-free Survival",
  new_page = TRUE,
  is.summary = c(TRUE, rep(FALSE, nrow(forest_data_plot))),
  boxsize = 0.2,
  col = fpColors(box = "darkblue", line = "black", summary = "darkblue"),
  txt_gp = fpTxtGp(label = gpar(cex = 0.8), ticks = gpar(cex = 0.7), xlab = gpar(cex = 0.8)),
  align = "l",                      
  clip = c(0.01, 100),                  
  graph.pos = 2)                         

#dev.off()
```

## OS all results together

```{r, fig.width = 10, fig.height = 4}
OSCox_confaunders <- OSCox_confaunders %>%
  mutate(Model = "With Covariates") 

OSCox <- OSCox %>%
  mutate(Model = "Without Covariates") 

combined_table <- bind_rows(OSCox_confaunders, OSCox)

forest_data_plot <- combined_table %>%
  mutate(
    HR = as.numeric(sub(" .*", "", HR_with_CI)),
    lower_95 = as.numeric(sub(".*\\((.*)-.*\\)", "\\1", HR_with_CI)),
    upper_95 = as.numeric(sub(".*-(.*)\\)", "\\1", HR_with_CI)),      
    p_and_adj_p = paste0("p: ", p.value, "; adj: ", adj_p_value)
  ) %>%
  arrange(Covariate, Model)


labeltext <- rbind(
  c("Covariate", "HR (95% CI)", "Model", "P-values"),
  forest_data_plot %>% select(Covariate, HR_with_CI, Model, p_and_adj_p) %>% as.matrix()
)

mean_values <- forest_data_plot$HR
lower_values <- forest_data_plot$lower_95
upper_values <- forest_data_plot$upper_95

#png("outputs/forest_plot_time_dep_OS.png", width = 1500, height = 500, res = 150)

forestplot(
  labeltext = labeltext,
  mean = c(NA, mean_values),
  lower = c(NA, lower_values),
  upper = c(NA, upper_values),
  xlog = TRUE,
  xlim = c(0.01, 100),              
  title = "Forest Plot for Time-Dependent Cox Models for Overall Survival",
  new_page = TRUE,
  is.summary = c(TRUE, rep(FALSE, nrow(forest_data_plot))),
  boxsize = 0.2,
  col = fpColors(box = "darkblue", line = "black", summary = "darkblue"),
  txt_gp = fpTxtGp(label = gpar(cex = 0.8), ticks = gpar(cex = 0.7), xlab = gpar(cex = 0.8)),
  align = "l",                       
  clip = c(0.01, 100),                
  graph.pos = 2)                     

#dev.off()
```
