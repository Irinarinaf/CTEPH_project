"0","vars_for_table <- colnames(data_surv_new%>%select(ends_with(""Cat0"")|ends_with(""Cat1"")|ends_with(""Num0"")|ends_with(""Cat2"")|ends_with(""Num1"")))"
"1","[38;5;232mAdding missing grouping variables: `USUBJID`[39m
"
"0","                          "
"0","length(vars_for_table)"
"1","[1]"
"1"," 71"
"1","
"
"0","univ_formulas <- sapply(vars_for_table[2:length(vars_for_table)], function(x) as.formula(paste('Surv(Time_to_decreaseCox, Event_decreaseCox)~', x)))"
"0",""
"0","univ_models <- lapply(univ_formulas, function(x){coxph(x, data = data_surv_new)})"
"2","Warning in coxph.fit(X, Y, istrat, offset, init, control, weights = weights,  :"
"2","
 "
"2"," Loglik converged before variable  3 ; coefficient may be infinite. 
"
"0","table0 <- data.frame()"
"0","test0 <- c()"
"0","i <- 2"
"0",""
"0","for (model in univ_models){"
"0","  table0 <- bind_rows(table0, tidy(model))"
"0","  test <- cox.zph(model)"
"0","  test0 <- c(test0, test$table[1, ""p""])"
"0","  names <- vars_for_table[i]"
"0","  i <- i+1"
"0","}"
"0",""
"0",""
"0","#test <- cox.zph(model)"
"0","#p_value <- test$table[1, 3]"
"0",""
"0","#ggforest(linelistsurv_cox, data = as.data.frame(data_surv_new))"
"0",""
"0","#ggcoxdiagnostics(linelistsurv_cox, type = ""schoenfeld"") +"
"0","  #theme_bw()"
"0",""
"0",""
"0","table0 <- table0 %>%"
"0","  mutate("
"0","          HR = exp(estimate),"
"0","          lower_95 = exp(estimate - 1.96 * std.error),"
"0","          upper_95 = exp(estimate + 1.96 * std.error),"
"0","          HR_with_CI = paste0("
"0","            round(HR, 2), "
"0","            "" ("", "
"0","            round(lower_95, 2), "
"0","            ""-"", "
"0","            round(upper_95, 2), "
"0","            "")"""
"0","          ),"
"0","          raw_p_value = ifelse(p.value == ""N.A."", NA, round(as.numeric(p.value), 2)),"
"0","          adj_p_value = round(p.adjust(as.numeric(p.value), method = ""BH""), 2)"
"0","        )"
"0",""
"0","# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞"
"0","forest_data_plot <- table0 %>%"
"0","  filter((lower_95 < 1 & upper_95 <1)|(lower_95 > 1 & upper_95 >1))%>% # –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –º–æ–¥–µ–ª–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö CI –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç 1 "
"0","  mutate("
"0","    HR = as.numeric(sub("" .*"", """", HR_with_CI)), # –ò–∑–≤–ª–µ–∫–∞–µ–º HR"
"0","    lower_95 = as.numeric(sub("".*\\((.*)-.*\\)"", ""\\1"", HR_with_CI)), # –ò–∑–≤–ª–µ–∫–∞–µ–º lower CI"
"0","    upper_95 = as.numeric(sub("".*-(.*)\\)"", ""\\1"", HR_with_CI)),      # –ò–∑–≤–ª–µ–∫–∞–µ–º upper CI"
"0","    p_and_adj_p = paste0(""p: "", raw_p_value, ""; adj: "", adj_p_value)      # –û–±—ä–µ–¥–∏–Ω—è–µ–º p-value"
"0","  ) %>%"
"0","  arrange(p.value)"
"0",""
"0","# –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏"
"0","labeltext <- rbind("
"0","  c(""Covariate"", ""HR (95% CI)"", ""P-values""),  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –¥–ª—è p-values"
"0","  forest_data_plot %>% select(term, HR_with_CI, p_and_adj_p) %>% as.matrix()"
"0",")"
"0",""
"0","# –ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è Forest Plot"
"0","mean_values <- forest_data_plot$HR"
"0","lower_values <- forest_data_plot$lower_95"
"0","upper_values <- forest_data_plot$upper_95"
"0",""
"0",""
"0","forestplot::forestplot("
"0","  labeltext = labeltext,"
"0","  mean = c(NA, mean_values),"
"0","  lower = c(NA, lower_values),"
"0","  upper = c(NA, upper_values),"
"0","  xlog = TRUE,"
"0","  xlim = c(0.01, 100),                   # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –æ—Å–∏ X"
"0","  title = ""Forest Plot for the best Time-Independent Cox Models for Deterioration-free Survival"","
"0","  new_page = TRUE,"
"0","  is.summary = c(TRUE, rep(FALSE, nrow(forest_data_plot))),"
"0","  boxsize = 0.2,"
"0","  col = fpColors(box = ""darkblue"", line = ""black"", summary = ""darkblue""),"
"0","  txt_gp = fpTxtGp(label = gpar(cex = 0.8), ticks = gpar(cex = 0.7), xlab = gpar(cex = 0.8)),"
"0","  align = ""l"",                        # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–ª–µ–≤–∞"
"0","  clip = c(0.01, 100),                   # –û–±—Ä–µ–∑–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π"
"0","  graph.pos = 2)                         # –ü–æ–∑–∏—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞"
